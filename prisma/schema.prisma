generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int        @id @default(autoincrement())
  // User info
  name               String
  email              String     @unique
  password           String
  avatar             String?
  // Appearance
  darkMode           Boolean    @default(false)
  color              String     @default("cyan")
  // Finances
  currency           String     @default("USD")
  financePlan        String     @default("medium")
  budgetDaily        Int        @default(0)
  budgetWeekly       Int        @default(0)
  budgetMonthly      Int        @default(0)
  budgets            Budget[]
  goals              Goal[]
  // Data (onboarding, etc...)
  onboardingComplete Boolean    @default(false)
  verifiedEmail      Boolean    @default(false)
  // Tokens
  financeToken       String?    @unique
  sessions           Session[]
  // Properties
  properties         Property[]
}

model Budget {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id])
  userId Int
  name   String
  limit  Int
}

model Goal {
  id     Int     @id @default(autoincrement())
  user   User    @relation(fields: [userId], references: [id])
  userId Int
  name   String
  // https://source.unsplash.com/random/1000x300
  banner String  @default("https://images.unsplash.com/photo-1659412321527-8cddf2458faa?crop=entropy&cs=tinysrgb&fit=crop&fm=jpg&h=300&ixid=MnwxfDB8MXxyYW5kb218MHx8fHx8fHx8MTY2MjA4ODY5OA&ixlib=rb-1.2.1&q=80&w=1000")
  note   String?
}

model Session {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id])
  userId Int
}

model Property {
  id           String       @id @default(uuid())
  accessToken  String       @unique @default(uuid())
  propertyName String
  propertyType String
  role         String
  bannerColor  String       @default("cyan")
  accepted     Boolean      @default(false)
  inventory    Item[]
  lists        List[]
  listItems    ListItem[]
  customRooms  CustomRoom[]

  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model CustomRoom {
  id     String  @id @default(uuid())
  name   String
  pinned Boolean @default(false)

  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
}

model Item {
  id           Int      @id @default(autoincrement())
  name         String
  quantity     String
  note         String
  lastModified DateTime
  starred      Boolean  @default(false)
  property     Property @relation(fields: [propertyId], references: [id])
  propertyId   String
}

model List {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  items       ListItem[]
  property    Property   @relation(fields: [propertyId], references: [id])
  propertyId  String
}

model ListItem {
  id      Int     @id @default(autoincrement())
  name    String
  details String
  pinned  Boolean @default(false)
  list    List    @relation(fields: [listId], references: [id])
  listId  Int

  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
}
