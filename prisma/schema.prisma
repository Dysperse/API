generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int              @id @unique @default(autoincrement())
  name               String
  email              String           @unique
  password           String
  avatar             String?
  darkMode           Boolean          @default(false)
  color              String           @default("cyan")
  onboardingComplete Boolean          @default(false)
  verifiedEmail      Boolean          @default(false)
  // List of active properties and sessions
  properties         PropertyInvite[]
  sessions           Session[]
}

model Session {
  id     String @id @default(uuid())
  userId Int
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId], map: "Session_userId_fkey")
}

model Property {
  id      String           @id @default(uuid())
  // Member list
  members PropertyInvite[]

  // Property features which are synced
  customRooms          CustomRoom[]
  inventory            Item[]
  lists                List[]
  maintenanceReminders MaintenanceReminder[]

  // Information about the property
  name  String @default("My Property")
  type  String @default("apartment")
  color String @default("cyan")
}

model PropertyInvite {
  id Int @id @unique @default(autoincrement())

  // This is the user that is invited to the property
  user   User @relation(fields: [userId], references: [id])
  userId Int

  // This is the property's profile id, containing the property's name, address, etc.
  profile     Property @relation(fields: [propertyId], references: [id])
  propertyId  String
  accessToken String   @unique @default(uuid())

  // Is this property currently selected?
  selected Boolean @default(false)

  // Has the user accepted the invite?
  accepted Boolean @default(false)

  // What is the user's role in this property?
  permission String @default("read-only") // read-only, member, admin
}

// -------------------------------------------------

model CustomRoom {
  id     String  @id @default(uuid())
  name   String
  pinned Boolean @default(false)

  // Property this room belongs to
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
}

model Item {
  id           Int      @id @default(autoincrement())
  name         String
  quantity     String
  note         String
  lastModified DateTime
  starred      Boolean  @default(false)
  category     String   @default("[]")
  room         String   @default("kitchen")

  // Property this room belongs to
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
}

model List {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  items       ListItem[]

  // Property this room belongs to
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
}

model ListItem {
  id        Int     @id @default(autoincrement())
  name      String
  details   String
  pinned    Boolean @default(false)
  completed Boolean @default(false)
  listId    Int
  list      List    @relation(fields: [listId], references: [id])
}

model MaintenanceReminder {
  id        Int      @id @default(autoincrement())
  name      String   @default("Maintenance Reminder")
  note      String
  frequency String   @default("monthly")
  lastDone  DateTime @default(now())
  nextDue   DateTime @default(now())

  // Property this room belongs to
  property   Property @relation(fields: [propertyId], references: [id])
  propertyId String
}
