generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int              @id @unique @default(autoincrement())
  name               String
  email              String           @unique
  password           String
  darkMode           Boolean          @default(false)
  color              String           @default("cyan")
  onboardingComplete Boolean          @default(false)
  verifiedEmail      Boolean          @default(false)
  twoFactorSecret    String           @default("")
  properties         PropertyInvite[]
  sessions           Session[]
}

model Session {
  id     String @id @default(uuid())
  userId Int
  user   User   @relation(fields: [userId], references: [id])
}

model Property {
  id                   String                @id @default(uuid())
  name                 String                @default("My property")
  type                 String                @default("apartment")
  color                String                @default("cyan")
  customRooms          CustomRoom[]
  inventory            Item[]
  lists                List[]
  maintenanceReminders MaintenanceReminder[]
  notes                Note[]
  members              PropertyInvite[]
}

model PropertyInvite {
  id          Int      @id @unique @default(autoincrement())
  userId      Int
  propertyId  String
  selected    Boolean  @default(false)
  permission  String   @default("read-only")
  accessToken String   @unique @default(uuid())
  accepted    Boolean  @default(false)
  profile     Property @relation(fields: [propertyId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
}

model CustomRoom {
  id         String   @id @default(uuid())
  name       String
  pinned     Boolean  @default(false)
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
}

model Note {
  id          String   @id @default(uuid())
  name        String
  pinned      Boolean  @default(false)
  propertyId  String
  content     String
  lastUpdated DateTime @default(now())
  color       String   @default("orange")
  property    Property @relation(fields: [propertyId], references: [id])
}

model Item {
  id           Int      @id @default(autoincrement())
  name         String
  quantity     String
  note         String
  lastModified DateTime
  starred      Boolean  @default(false)
  category     String   @default("[]")
  room         String   @default("kitchen")
  propertyId   String
  trash        Boolean  @default(false)
  property     Property @relation(fields: [propertyId], references: [id])
}

model List {
  id          Int        @id @default(autoincrement())
  name        String
  description String
  propertyId  String
  property    Property   @relation(fields: [propertyId], references: [id])
  items       ListItem[]
}

model ListItem {
  id        Int     @id @default(autoincrement())
  name      String
  details   String
  pinned    Boolean @default(false)
  completed Boolean @default(false)
  listId    Int
  list      List    @relation(fields: [listId], references: [id])
}

model MaintenanceReminder {
  id         Int      @id @default(autoincrement())
  name       String   @default("Maintenance Reminder")
  note       String
  frequency  String   @default("monthly")
  lastDone   DateTime @default(now())
  nextDue    DateTime @default(now())
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id])
}
