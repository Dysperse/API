import { SessionProvider } from "@/lib/client/session";
import { getUserData } from "@/lib/server/getUserData";
import jwt from "jsonwebtoken";
import { cookies } from "next/headers";
import { SWRConfig } from "swr";
import ClientLayout from "./client-layout";

export const metadata = {
  title: "Next.js",
  description: "Generated by Next.js",
};

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const data = await getSession();

  const selectedProperty =
    data?.properties &&
    (data.properties.find((property: any) => property.selected) ||
      data.properties[0]);

  const themeColor = data?.user?.color || "violet";

  const s = data?.properties && {
    ...data,
    property: selectedProperty,
    permission: selectedProperty.permission,
    themeColor,
    darkMode: data.user.darkMode,
  };

  return (
    <html lang="en">
      <body>
        <ClientLayout children={children} session={s} />
      </body>
    </html>
  );
}

async function getSession() {
  const cookieStore = cookies();
  const token = cookieStore.get("token")?.value;

  const { accessToken } = jwt.verify(token, process.env.SECRET_COOKIE_PASSWORD);

  const info = await getUserData(accessToken);
  return JSON.parse(JSON.stringify(info));
}
